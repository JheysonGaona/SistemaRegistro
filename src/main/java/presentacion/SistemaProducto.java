/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;

import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;
import negocio.ProductoServicio;

/**
 *
 * @author Jheyson Gaona
 */
public class SistemaProducto extends javax.swing.JFrame {

    private ProductoServicio servicio;
    private final DefaultTableModel modelo;
    private List<Producto> listadoProductos;
    
    // Crear borde de color rojo y negro para visualizar el formulario
    private final Border bordeRojo = BorderFactory.createLineBorder(Color.RED, 2);
    private final Border bordeNegro = BorderFactory.createLineBorder(Color.BLACK, 1);
    
    /**
     * Creates new form ProductoUI
     */
    public SistemaProducto() {
        initComponents();
        this.servicio = new ProductoServicio();
        
        // Se gestiona la accion de que la tabla no sea editable
        this.modelo = new DefaultTableModel(
            new String[] {"Nombre", "Código", "Precio"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // ninguna celda será editable
                return false;
            }
        };

        // Asignas el modelo a la tabla
        this.tbListProduct.setModel(modelo);
        
        // Actualiza la tabla con todos los registros de los usuarios y
        // Se limpia el formulario para setear los botones
        ActualizarTablaRegistro();
        LimpiarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSystemProduct = new javax.swing.JLabel();
        lblCodeProduct = new javax.swing.JLabel();
        txtCodeProduct = new javax.swing.JTextField();
        lblNameProduct = new javax.swing.JLabel();
        txtNameProduct = new javax.swing.JTextField();
        lblPriceProduct = new javax.swing.JLabel();
        txtPriceProduct = new javax.swing.JTextField();
        btnRegisterProduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListProduct = new javax.swing.JTable();
        btnUpdateProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        lblListProdutcRegister = new javax.swing.JLabel();
        btnClearProduct = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        lblSystemProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSystemProduct.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSystemProduct.setText("SISTEMA PRODUCTO");

        lblCodeProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCodeProduct.setText("Codigo producto");

        txtCodeProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCodeProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeProductActionPerformed(evt);
            }
        });

        lblNameProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNameProduct.setText("Nombre producto");

        txtNameProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNameProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameProductActionPerformed(evt);
            }
        });

        lblPriceProduct.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPriceProduct.setText("Precio");

        txtPriceProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnRegisterProduct.setBackground(new java.awt.Color(0, 153, 51));
        btnRegisterProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRegisterProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnRegisterProduct.setLabel("Registrar");
        btnRegisterProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterProductActionPerformed(evt);
            }
        });

        tbListProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbListProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Codigo", "Precio"
            }
        ));
        tbListProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListProduct);

        btnUpdateProduct.setBackground(new java.awt.Color(255, 153, 0));
        btnUpdateProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateProduct.setText("Actualizar");
        btnUpdateProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        btnDeleteProduct.setBackground(new java.awt.Color(255, 0, 0));
        btnDeleteProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteProduct.setText("Eliminar");
        btnDeleteProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        lblListProdutcRegister.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblListProdutcRegister.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListProdutcRegister.setText("LISTA DE PRODUCTOS REGISTRADOS");

        btnClearProduct.setBackground(new java.awt.Color(0, 204, 204));
        btnClearProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearProduct.setText("Limpiar");
        btnClearProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnClearProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPriceProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClearProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSystemProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNameProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                    .addComponent(lblNameProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtPriceProduct)
                            .addComponent(btnRegisterProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(lblListProdutcRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSystemProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblListProdutcRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(btnRegisterProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameProductActionPerformed

    private void txtCodeProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeProductActionPerformed

    private void btnRegisterProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterProductActionPerformed
        RegistrarNuevoProducto();
    }//GEN-LAST:event_btnRegisterProductActionPerformed

    private void tbListProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListProductMouseClicked
        LlenarFormularioDesdeTabla();
    }//GEN-LAST:event_tbListProductMouseClicked

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        ActualizarDatosProducto();
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        EliminarRegistroProducto();
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void btnClearProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearProductActionPerformed
        LimpiarFormulario();
    }//GEN-LAST:event_btnClearProductActionPerformed

    
    // Se emplea este metodo para poder registrar una nueva producto en la DB
    private void RegistrarNuevoProducto() {
        // Si el formulario esta lleno proceder a enviarlo a la capa de negocio
        if(ValidarFormulario()){           
            Producto nuevoProducto = GenerarDatosProducto();
            // Se valida si la producto no sea nula, si es asi acaba el metodo
            if(nuevoProducto == null) return;
            // [0] ya existe el producto  [1] registro de producto exitoso
            // [2] Error interno
            int registro = servicio.AgregarNuevoProducto(nuevoProducto);
            switch (registro) {
                case 0:
                    MostrarMensajePanel("Ya existe el producto con ese número de código.",
                            "Advertencia", JOptionPane.WARNING_MESSAGE);
                    break;
                    
                case 1:
                    MostrarMensajePanel("Registro exitoso.",
                            "Información", JOptionPane.INFORMATION_MESSAGE);
                    // Se actualiza la tabla de registro y limpiar el formulario
                    ActualizarTablaRegistro();
                    LimpiarFormulario();
                    break;
                    
                case 2:
                    MostrarMensajePanel("Error interno, intentelo más tarde.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    break;
            }
        }else{
            MostrarMensajePanel("Debe completar todos los campos obligatorios.",
                    "Advertencia", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    
    // Se emplea este metodo para poder actualizar el producto en la DB
    private void ActualizarDatosProducto(){
        // Se obtiene el id seleccionado de la tabla
        int filaSeleccionada = this.tbListProduct.getSelectedRow();
            // Se valdia que la fila seleccionada sea superior a cero 
            if (filaSeleccionada >= 0) {
            // Si el formulario esta lleno proceder a enviarlo a la capa de negocio
            if(ValidarFormulario()) {
                Producto actualizarProducto = GenerarDatosProducto();
                // Se valida si la producto no sea nula, si es asi acaba el metodo
                if(actualizarProducto == null) return;
                // Se obtiene el id del producto
                int idProducto = this.listadoProductos.get(filaSeleccionada).getId();
                boolean actualizado = this.servicio.ActualizarProducto(idProducto, actualizarProducto);
                
                // Se verifica si el producto se a actualizado correctamente
                if(actualizado){
                    MostrarMensajePanel("Registro actualizado.",
                            "Información", JOptionPane.INFORMATION_MESSAGE);
                    ActualizarTablaRegistro();
                    LimpiarFormulario();
                }else{
                    MostrarMensajePanel("No se pudo actualizar el registro.",
                            "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }
    
    
    // Se emplea este metodo para poder eliminar el producto en la DB
    private void EliminarRegistroProducto(){
        // Se obtiene el id seleccionado de la tabla
        int filaSeleccionada = this.tbListProduct.getSelectedRow();
        
        // Se valdia que la fila seleccionada sea superior a cero 
        if (filaSeleccionada >= 0) {
            // Confirmar antes de eliminar
            int confirmacion = JOptionPane.showConfirmDialog(null,
                    "¿Estás seguro de eliminar este producto?",
                    "Confirmar eliminación",
                    JOptionPane.YES_NO_OPTION);

            // La confirmación ha sido exitosa
            if (confirmacion == JOptionPane.YES_OPTION) {
                int idProducto = this.listadoProductos.get(filaSeleccionada).getId();
                boolean eliminado = this.servicio.EliminarProductoPorId(idProducto);
                // Se ha elimando correctamente en la DB
                if (eliminado) {
                    MostrarMensajePanel("Producto eliminado correctamente.",
                            "", JOptionPane.INFORMATION_MESSAGE);
                    ActualizarTablaRegistro();
                    LimpiarFormulario();
                } else {
                    MostrarMensajePanel("No se pudo eliminar el producto.",
                            "", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }
    
    
    // Se emplea este metodo para poder generar los datos del producto
    // tanto para cuando se crea como para cuando se actualiza
    private Producto GenerarDatosProducto(){
        String nombre = this.txtNameProduct.getText();
        String codigo = this.txtCodeProduct.getText();
        float precio = Float.parseFloat(this.txtPriceProduct.getText());
        Producto nuevoProducto = new Producto(precio, codigo, nombre);
        return nuevoProducto;
    }
    
    
    // Se emplea este metodo para poder generar los msm dentro de los paneles
    private void MostrarMensajePanel(String msm, String cabezera,  int tipoPanel) {
        JOptionPane.showMessageDialog(null, msm, cabezera, tipoPanel);
    }
    
    
    // Metodo que permite validar si el formulario se encuentra con registros
    private boolean ValidarFormulario(){
        // Pintar los bordes de cada caja de texto usando operador ternario
        this.txtNameProduct.setBorder(this.txtNameProduct.getText().isEmpty() ? this.bordeRojo: this.bordeNegro);
        this.txtCodeProduct.setBorder(this.txtCodeProduct.getText().isEmpty() ? this.bordeRojo: this.bordeNegro);
        this.txtPriceProduct.setBorder(this.txtPriceProduct.getText().isEmpty() ? this.bordeRojo: this.bordeNegro);
        
        // Devuelve verdad si esta completamente lleno, o falso si algo falta llenar
        return !(this.txtNameProduct.getText().isEmpty() || this.txtCodeProduct.getText().isEmpty()
            || this.txtPriceProduct.getText().isEmpty());
    }
    
    
    // Metodo que se emplea para poder actualizar los registros de la tabla
    private void ActualizarTablaRegistro(){
        // Limpia la tabla antes de llenarla
        this.modelo.setRowCount(0);

        this.listadoProductos = this.servicio.ListarProductos();
        // Ciclo repetitivo mejorado para llenar la tabla con registros
        for (Producto productoActual : this.listadoProductos) {
            Object[] fila = new Object[] {
                productoActual.getNombre(),
                productoActual.getCodigo(),
                productoActual.getPrecio()
            };
            this.modelo.addRow(fila);
        }
    }
    
    
    // Metodo que se emplea para poder llenar el formulario luego de selecionar
    // una columna de la tabla
    private void LlenarFormularioDesdeTabla() {
        int filaSeleccionada = this.tbListProduct.getSelectedRow();

        // Se valida si se ha selecionado una fila positiva
        if (filaSeleccionada >= 0) {
            this.btnDeleteProduct.setEnabled(true);
            this.btnUpdateProduct.setEnabled(true);
            this.btnRegisterProduct.setEnabled(false);

            // Obtiene los valores de cada columna según el índice
            String nombre = this.tbListProduct.getValueAt(filaSeleccionada, 0).toString();
            String codigo = this.tbListProduct.getValueAt(filaSeleccionada, 1).toString();
            String precio = this.tbListProduct.getValueAt(filaSeleccionada, 2).toString();

            // Asigna a tus campos de formulario
            this.txtNameProduct.setText(nombre);
            this.txtCodeProduct.setText(codigo);
            this.txtPriceProduct.setText(precio);
        }
    }

    
    // Se emplea este metodo para poder limpiar el formulario
    private void LimpiarFormulario(){
        this.txtNameProduct.setText("");
        this.txtCodeProduct.setText("");
        this.txtPriceProduct.setText("");
        
        this.tbListProduct.clearSelection();
        this.btnRegisterProduct.setEnabled(true);
        this.btnDeleteProduct.setEnabled(false);
        this.btnUpdateProduct.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnRegisterProduct;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodeProduct;
    private javax.swing.JLabel lblListProdutcRegister;
    private javax.swing.JLabel lblNameProduct;
    private javax.swing.JLabel lblPriceProduct;
    private javax.swing.JLabel lblSystemProduct;
    private javax.swing.JTable tbListProduct;
    private javax.swing.JTextField txtCodeProduct;
    private javax.swing.JTextField txtNameProduct;
    private javax.swing.JTextField txtPriceProduct;
    // End of variables declaration//GEN-END:variables
}
